@model IEnumerable<UCEP.Models.FsCatalogue>

@using UCEP.Models;

@{
    ViewBag.Title = "Index";
}


<style type="text/css">
  /* Generic Styling, for Desktops/Laptops */
  table {
    width: 100%;
    border-collapse: collapse;
  }
  /* Zebra striping */
  tr:nth-of-type(odd) {
    background: #eee;
  }

  th {
    background: #333;
    color: white;
    font-weight: bold;
  }

  td, th {
    padding: 6px;
    border: 1px solid #ccc;
    text-align: left;
  }
  /*
    Max width before this PARTICULAR table gets nasty
    This query will take effect for any screen smaller than 760px
    and also iPads specifically.
    */
  @@media only screen and (max-width: 760px), (min-device-width: 768px) and (max-device-width: 1024px) {

    /* Force table to not be like tables anymore */
    table, thead, tbody, th, td, tr {
      /*display: block;*/
    }

      /* Hide table headers (but not display: none;, for accessibility) */
      thead tr {
        position: absolute;
        top: -9999px;
        left: -9999px;
      }

    tr {
      border: 1px solid #ccc;
    }

    td {
      /* Behave  like a "row" */
      border: none;
      border-bottom: 1px solid #eee;
      position: relative;
      padding-left: 50%;
    }

      td:before {
        /* Now like a table header */
        position: absolute;
        /* Top/left values mimic padding */
        top: 6px;
        left: 6px;
        width: 45%;
        padding-right: 10px;
        white-space: nowrap;
      }

      /*
     Label the data
     */
      td:before {
        content: attr(data-title);
      }
  }
</style>

<h2>List Item @GlobalConfig.Hospital.Item2</h2>

<span id="spanHos"></span>

@*<p>
      @Html.ActionLink("Create New", "Create")
  </p>*@


@using (Html.BeginForm("Index", "UCEP", FormMethod.Post, new { id = "dropdown", name = "dropdown" }))
{
  @Html.DropDownList("catalogue",
                           new SelectList(Enum.GetValues(typeof(Enums.Catalogue))),
                           "---Select Catalogue---",
                           new { @class = "form-control" })
  <br />

        @Html.DropDownList("hospital",
                      new SelectList(Enum.GetValues(typeof(Enums.Hospital))),
                      "---Select Hospital---",
                      new { @class = "form-control", onchange = "SelectedIndexChanged()" })
        <br />

        <p>
          @Html.TextBox("SearchString", ViewData.TemplateInfo.FormattedModelValue, new { @class = "form-control", placeholder = ViewBag.Filter })
          <input type="submit" value="Filter" />
        </p>
}




@if (GlobalConfig.Catalogue == Enums.Catalogue.FSCatalogue.ToString())
{
  <p>Number of Item : @GlobalConfig.FsCatalogueList.Count</p>
  <table class="table">
    <tr>
      <th>
        @Html.DisplayName(FsCatalogueEnum.HospitalCode.ToString())
      </th>
      <th>
        @Html.DisplayName(FsCatalogueEnum.FSCodeNIEMS.ToString())
      </th>
      <th>
        @Html.DisplayName(FsCatalogueEnum.FSCodeHos.ToString())
      </th>
      <th>
        @Html.DisplayName(FsCatalogueEnum.Category.ToString())
      </th>
      <th>
        @Html.DisplayName(FsCatalogueEnum.Meaning.ToString())
      </th>
      <th>
        @Html.DisplayName(FsCatalogueEnum.Unit.ToString())
      </th>
      <th>
        @Html.DisplayName(FsCatalogueEnum.Price.ToString())
      </th>
      <th>
        @Html.DisplayName(FsCatalogueEnum.EffectiveDate.ToString())
      </th>
      <th>
        @Html.DisplayName(FsCatalogueEnum.Status.ToString())
      </th>
      <th>
        @Html.DisplayName(FsCatalogueEnum.ApprovalDate.ToString())
      </th>
      @*<th></th>*@
    </tr>

    @foreach (var item in ViewData["FsCatalogueList"] as IEnumerable<UCEP.Models.FsCatalogue>)
        {
      <tr>
        <td>
          @Html.DisplayFor(modelItem => item.HospitalCode)
        </td>
        <td>
          @Html.DisplayFor(modelItem => item.FSCodeNIEMS)
        </td>
        <td>
          @Html.DisplayFor(modelItem => item.FSCodeHos)
        </td>
        <td>
          @Html.DisplayFor(modelItem => item.Category)
        </td>
        <td>
          @Html.DisplayFor(modelItem => item.Meaning)
        </td>
        <td>
          @Html.DisplayFor(modelItem => item.Unit)
        </td>
        <td>
          @Html.DisplayFor(modelItem => item.Price)
        </td>
        <td>
          @Html.DisplayFor(modelItem => item.EffectiveDate)
        </td>
        <td>
          @Html.DisplayFor(modelItem => item.Status)
        </td>
        <td>
          @Html.DisplayFor(modelItem => item.ApprovalDate)
        </td>
        @*<td>
              @Html.ActionLink("Edit", "Edit", new { id=item.Id }) |
              @Html.ActionLink("Details", "Details", new { id=item.Id }) |
              @Html.ActionLink("Delete", "Delete", new { id=item.Id })
          </td>*@
      </tr>
    }

  </table>

}
else if (GlobalConfig.Catalogue == Enums.Catalogue.DrugCatalogue.ToString())
{
  <p>
    Number of Item : @GlobalConfig.DrugCatalogueList.Count
  </p>
  <table class="table">
    <tr>
      <th>
        @Html.DisplayName(DrugCatalogueEnum.HospDrugCode.ToString())
      </th>
      <th>
        @Html.DisplayName(DrugCatalogueEnum.PRODUCTCAT.ToString())
      </th>
      <th>
        @Html.DisplayName(DrugCatalogueEnum.TMTID.ToString())
      </th>
      <th>
        @Html.DisplayName(DrugCatalogueEnum.SPECPREP.ToString())
      </th>
      <th>
        @Html.DisplayName(DrugCatalogueEnum.GENERICNAME.ToString())
      </th>
      <th>
        @Html.DisplayName(DrugCatalogueEnum.TRADENAME.ToString())
      </th>
      <th>
        @Html.DisplayName(DrugCatalogueEnum.DFSCODE.ToString())
      </th>
      <th>
        @Html.DisplayName(DrugCatalogueEnum.DOSAGEFORM.ToString())
      </th>
      <th>
        @Html.DisplayName(DrugCatalogueEnum.STRENGTH.ToString())
      </th>
      <th>
        @Html.DisplayName(DrugCatalogueEnum.CONTENT.ToString())
      </th>
      <th>
        @Html.DisplayName(DrugCatalogueEnum.UNITPRICE.ToString())
      </th>
      <th>
        @Html.DisplayName(DrugCatalogueEnum.DISTRIBUTOR.ToString())
      </th>
      <th>
        @Html.DisplayName(DrugCatalogueEnum.MANUFACTURER.ToString())
      </th>
      <th>
        @Html.DisplayName(DrugCatalogueEnum.ISED.ToString())
      </th>
      <th>
        @Html.DisplayName(DrugCatalogueEnum.NDC24.ToString())
      </th>
      <th>
        @Html.DisplayName(DrugCatalogueEnum.PACKSIZE.ToString())
      </th>
      <th>
        @Html.DisplayName(DrugCatalogueEnum.PACKPRICE.ToString())
      </th>
      <th>
        @Html.DisplayName(DrugCatalogueEnum.UPDATEFLAG.ToString())
      </th>
      <th>
        @Html.DisplayName(DrugCatalogueEnum.DATECHANGE.ToString())
      </th>
      <th>
        @Html.DisplayName(DrugCatalogueEnum.DATEUPDATE.ToString())
      </th>
      <th>
        @Html.DisplayName(DrugCatalogueEnum.DATEEFFECTIVE.ToString())
      </th>
      <th>
        @Html.DisplayName(DrugCatalogueEnum.ISED_APPROVED.ToString())
      </th>
      <th>
        @Html.DisplayName(DrugCatalogueEnum.NDC24_APPROVED.ToString())
      </th>
      <th>
        @Html.DisplayName(DrugCatalogueEnum.DATE_APPROVED.ToString())
      </th>
      <th>
        @Html.DisplayName(DrugCatalogueEnum.ISED_STATUS.ToString())
      </th>
    </tr>

    @foreach (var item in ViewData["DrugCatalogueList"] as IEnumerable<UCEP.Models.DrugCatalogue>)
        {
      <tr>
        <td>
          @Html.DisplayFor(modelItem => item.HospDrugCode)
        </td>
        <td>
          @Html.DisplayFor(modelItem => item.PRODUCTCAT)
        </td>
        <td>
          @Html.DisplayFor(modelItem => item.TMTID)
        </td>
        <td>
          @Html.DisplayFor(modelItem => item.SPECPREP)
        </td>
        <td>
          @Html.DisplayFor(modelItem => item.GENERICNAME)
        </td>
        <td>
          @Html.DisplayFor(modelItem => item.TRADENAME)
        </td>
        <td>
          @Html.DisplayFor(modelItem => item.DFSCODE)
        </td>
        <td>
          @Html.DisplayFor(modelItem => item.DOSAGEFORM)
        </td>
        <td>
          @Html.DisplayFor(modelItem => item.STRENGTH)
        </td>
        <td>
          @Html.DisplayFor(modelItem => item.CONTENT)
        </td>
        <td>
          @Html.DisplayFor(modelItem => item.UNITPRICE)
        </td>
        <td>
          @Html.DisplayFor(modelItem => item.DISTRIBUTOR)
        </td>
        <td>
          @Html.DisplayFor(modelItem => item.MANUFACTURER)
        </td>
        <td>
          @Html.DisplayFor(modelItem => item.ISED)
        </td>
        <td>
          @Html.DisplayFor(modelItem => item.NDC24)
        </td>
        <td>
          @Html.DisplayFor(modelItem => item.PACKSIZE)
        </td>
        <td>
          @Html.DisplayFor(modelItem => item.PACKPRICE)
        </td>
        <td>
          @Html.DisplayFor(modelItem => item.UPDATEFLAG)
        </td>
        <td>
          @Html.DisplayFor(modelItem => item.DATECHANGE)
        </td>
        <td>
          @Html.DisplayFor(modelItem => item.DATEUPDATE)
        </td>
        <td>
          @Html.DisplayFor(modelItem => item.DATEEFFECTIVE)
        </td>
        <td>
          @Html.DisplayFor(modelItem => item.ISED_APPROVED)
        </td>
        <td>
          @Html.DisplayFor(modelItem => item.NDC24_APPROVED)
        </td>
        <td>
          @Html.DisplayFor(modelItem => item.DATE_APPROVED)
        </td>
        <td>
          @Html.DisplayFor(modelItem => item.ISED_STATUS)
        </td>
      </tr>
    }
  </table>
}



<script type="text/javascript">

  function SelectedIndexChanged() {
    //Form post
    document.dropdown.submit();
  }

</script>
