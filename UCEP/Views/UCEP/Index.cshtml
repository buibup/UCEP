@model IEnumerable<UCEP.Models.FsCatalogue>

@using UCEP.Models;

@{
    ViewBag.Title = "Index";
}


<style type="text/css">
  /* Generic Styling, for Desktops/Laptops */
  table {
    width: 100%;
    border-collapse: collapse;
  }
  /* Zebra striping */
  tr:nth-of-type(odd) {
    background: #eee;
  }

  th {
    background: #333;
    color: white;
    font-weight: bold;
  }

  td, th {
    padding: 6px;
    border: 1px solid #ccc;
    text-align: left;
  }
  /*
    Max width before this PARTICULAR table gets nasty
    This query will take effect for any screen smaller than 760px
    and also iPads specifically.
    */
  @@media only screen and (max-width: 760px), (min-device-width: 768px) and (max-device-width: 1024px) {

    /* Force table to not be like tables anymore */
    table, thead, tbody, th, td, tr {
      /*display: block;*/
    }

      /* Hide table headers (but not display: none;, for accessibility) */
      thead tr {
        position: absolute;
        top: -9999px;
        left: -9999px;
      }

    tr {
      border: 1px solid #ccc;
    }

    td {
      /* Behave  like a "row" */
      border: none;
      border-bottom: 1px solid #eee;
      position: relative;
      padding-left: 50%;
    }

      td:before {
        /* Now like a table header */
        position: absolute;
        /* Top/left values mimic padding */
        top: 6px;
        left: 6px;
        width: 45%;
        padding-right: 10px;
        white-space: nowrap;
      }

      /*
     Label the data
     */
      td:before {
        content: attr(data-title);
      }
  }
</style>

<h2>List Item @GlobalConfig.Hospital.Item2</h2>

<span id="spanHos"></span>

@*<p>
      @Html.ActionLink("Create New", "Create")
  </p>*@


@using (Html.BeginForm("Index", "UCEP", FormMethod.Post, new { id = "dropdown", name = "dropdown" }))
{
  @Html.DropDownList("catalogue",
                           new SelectList(Enum.GetValues(typeof(Enums.Catalogue))),
                           "---Select Catalogue---",
                           new { @class = "form-control" })
  <br />

  @Html.DropDownList("hospital",
                      new SelectList(Enum.GetValues(typeof(Enums.Hospital))),
                      "---Select Hospital---",
                      new { @class = "form-control", onchange = "SelectedIndexChanged()" })
  <br />

        <p>
          @Html.TextBox("SearchString", ViewData.TemplateInfo.FormattedModelValue, new { @class = "form-control", placeholder = ViewBag.Filter })
          <input type="submit" value="Filter" />
        </p>
}

@*<form method="get" action="@Url.Action("Index")"
      data-ucep-ajax="true" data-ucep-target="#ucepList">
  <input type="radio" value=""/>
  <input type="search" name="searchTerm" data-ucep-autocomplete="@Url.Action("Autocomplete")" />
  <input type="submit" value="Search"/>
</form>*@

@if (GlobalConfig.Catalogue == Enums.Catalogue.FSCatalogue.ToString())
{
  <p>Number of Item : @GlobalConfig.FsCatalogueList.Count</p>
  @Html.Partial("_FSCatalogue", @GlobalConfig.FsCatalogueList)
}
else if (GlobalConfig.Catalogue == Enums.Catalogue.DrugCatalogue.ToString())
{
  <p>Number of Item : @GlobalConfig.DrugCatalogueList.Count</p>
  @Html.Partial("_DrugCatalogue", GlobalConfig.DrugCatalogueList)
}



<script type="text/javascript">

  function SelectedIndexChanged() {
    //Form post
    document.dropdown.submit();
  }

</script>
